//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
    // Moved from normalize.less due to conflict with old KenticoCom Styles - TODO delete when switching to new design
    &, * {
        box-sizing: border-box;
    }

    *:before,
    *:after {
        box-sizing: border-box;
    }

    .container-fixed();

    @media (min-width: @screen-sm-min) {
        max-width: @container-sm;
    }

    @media (min-width: @screen-md-min) {
        max-width: @container-md;
    }

    @media (min-width: @screen-lg-min) {
        max-width: @container-lg;
    }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
    .container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
    .make-row();
}

// Extra extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xxs);
.make-grid-columns(xxs);


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@media (min-width: @screen-xs-min) {
    .make-grid(xs);
    .make-grid-columns(xs);
}

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
    .make-grid(sm);
    .make-grid-columns(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
    .make-grid(md);
    .make-grid-columns(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
    .make-grid(lg);
    .make-grid-columns(lg);
}
